# Secrets defined here are available for reference under registry/password, env/secret, builder/secrets,
# and accessories/*/env/secret in config/deploy.yml. All secrets should be pulled from either
# password manager, ENV, or a file. DO NOT ENTER RAW CREDENTIALS HERE! This file needs to be safe for git.

# =============================================================================
# REGISTRY AUTHENTICATION
# =============================================================================

# For GitHub Container Registry (GHCR) - recommended
# Create a Personal Access Token with read:packages and write:packages permissions
# https://github.com/settings/tokens
KAMAL_REGISTRY_PASSWORD=$KAMAL_REGISTRY_PASSWORD

# Alternative: Use GitHub CLI if available
# KAMAL_REGISTRY_PASSWORD=$(gh auth token)

# For Docker Hub
# KAMAL_REGISTRY_PASSWORD=$DOCKER_HUB_TOKEN

# For AWS ECR
# KAMAL_REGISTRY_PASSWORD=$(aws ecr get-login-password --region your-region)

# =============================================================================
# RAILS APPLICATION SECRETS
# =============================================================================

# Rails master key (automatically read from config/master.key)
# NEVER commit config/master.key to git!
RAILS_MASTER_KEY=$(cat config/master.key)

# Optional: HomeChat API token for integrations
# Generate a secure random token for production deployments
# HOMECHAT_API_TOKEN=$HOMECHAT_API_TOKEN

# =============================================================================
# DATABASE SECRETS (for external databases)
# =============================================================================

# PostgreSQL (if using external DB)
# POSTGRES_PASSWORD=$POSTGRES_PASSWORD

# MySQL (if using external DB) 
# MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD

# =============================================================================
# EXTERNAL SERVICES (if using cloud storage, etc.)
# =============================================================================

# AWS credentials (for S3 storage)
# AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
# AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY

# Google Cloud credentials (for GCS storage)
# GOOGLE_CLOUD_CREDENTIALS=$(cat path/to/service-account.json)

# =============================================================================
# PASSWORD MANAGER INTEGRATION EXAMPLES
# =============================================================================

# 1Password example:
# SECRETS=$(kamal secrets fetch --adapter 1password --account your-account --from Vault/Item KAMAL_REGISTRY_PASSWORD RAILS_MASTER_KEY)
# KAMAL_REGISTRY_PASSWORD=$(kamal secrets extract KAMAL_REGISTRY_PASSWORD ${SECRETS})
# RAILS_MASTER_KEY=$(kamal secrets extract RAILS_MASTER_KEY ${SECRETS})

# Bitwarden example:
# KAMAL_REGISTRY_PASSWORD=$(bw get password registry-token)
# RAILS_MASTER_KEY=$(bw get password rails-master-key)

# LastPass example:
# KAMAL_REGISTRY_PASSWORD=$(lpass show --password registry-token)
# RAILS_MASTER_KEY=$(lpass show --password rails-master-key)

# =============================================================================
# DEVELOPMENT/STAGING OVERRIDES
# =============================================================================

# You can create environment-specific secret files:
# .kamal/secrets.staging
# .kamal/secrets.production
