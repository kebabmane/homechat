// Basic offline cache for the app shell
const CACHE_NAME = 'homechat-v2';
const OFFLINE_URLS = [
  '/',
  '/icon.png',
  '/icon.svg'
];

self.addEventListener('install', event => {
  event.waitUntil(
    caches.open(CACHE_NAME).then(cache => cache.addAll(OFFLINE_URLS))
  );
});

self.addEventListener('activate', event => {
  event.waitUntil(
    caches.keys().then(keys => Promise.all(keys.filter(k => k !== CACHE_NAME).map(k => caches.delete(k))))
  );
});

self.addEventListener('fetch', event => {
  const req = event.request
  const url = new URL(req.url)

  // Only handle same-origin requests
  if (url.origin !== location.origin) return

  // Cache-first for static assets
  if (['style', 'script', 'image', 'font'].includes(req.destination) || url.pathname.startsWith('/assets') || url.pathname.startsWith('/app/assets/builds')) {
    event.respondWith(
      caches.open(CACHE_NAME).then(cache => cache.match(req).then(hit => {
        const fetchPromise = fetch(req).then(res => { cache.put(req, res.clone()); return res })
        return hit || fetchPromise
      }))
    )
    return
  }

  // Network-first for everything else
  event.respondWith(fetch(req).catch(() => caches.match(req)))
})
